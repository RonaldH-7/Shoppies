{"version":3,"sources":["components/About.js","components/AlertDisplay.js","components/Contact.js","components/MovieItem.js","components/Loading.js","components/Display.js","components/Navigation.js","components/Header.js","components/MovieDetailItem.js","components/MovieDetail.js","components/Search.js","App.js","index.js"],"names":["About","className","href","target","rel","React","Component","AlertDisplay","props","variant","isWarning","msg","Alert","show","icon","faWindowClose","size","onClick","handleClick","Contact","MovieItem","buttonStyle","float","display","key","this","movie","imdbID","buttonText","displayNominate","button","Button","style","disabled","isNominated","ListGroup","Item","to","Title","Year","nominations","i","length","Loading","faSpinner","spin","Display","displayMovies","movies","map","error","displayMsg","title","isLoading","Navigation","Nav","Header","MovieDetailItem","width","heading","value","MovieDetail","state","movieInfo","poster","hasPoster","match","params","fetchPoster","fetchMovie","uri","encodedURI","encodeURI","fetch","then","response","status","setState","url","json","data","buttonJSX","handleRemove","handleAdd","imageJSX","src","alt","marginLeft","movieDetailJSX","Table","striped","bordered","Genre","Rated","Runtime","BoxOffice","Plot","imdbRating","imdbVotes","Search","nameInput","focus","Form","onSubmit","event","preventDefault","Control","type","placeholder","name","onChange","handleChange","onKeyDown","handleSearch","ref","input","faSearch","App","movieResults","search","searched","searchedTerm","showAlert","showAlertWarning","bind","closeAlert","Response","forEach","prevState","Error","keyCode","fetchMovies","targetMovie","currentMovie","copyState","filter","nomination","property","results","path","exact","component","render","ReactDOM","document","getElementById"],"mappings":"8QAsBeA,E,uKAlBP,OACI,yBAAKC,UAAU,mBACX,qCACA,yMAG0B,uBAAGC,KAAK,0BAA0BC,OAAO,SAASC,IAAI,uBAAtD,YAH1B,sHAMA,iEACuC,uBAAGF,KAAK,2BAA2BC,OAAO,SAASC,IAAI,uBAAvD,WADvC,wJ,GAXIC,IAAMC,W,wBCkBXC,MAff,SAAsBC,GAClB,IAAIC,EAAUD,EAAME,UAAY,UAAY,UACxCC,EAAMH,EAAME,UACZ,0CACA,4CACAT,EAAYO,EAAME,UAAY,qBAAuB,aAEzD,OACI,kBAACE,EAAA,EAAD,CAAOC,KAAML,EAAMK,KAAMJ,QAASA,GAC9B,uBAAGR,UAAU,cAAcU,GAC3B,kBAAC,IAAD,CAAiBG,KAAMC,IAAeC,KAAK,KAAKC,QAAS,kBAAMT,EAAMU,YAAYV,EAAME,YAAYT,UAAWA,MCO3GkB,E,uKAlBP,OACI,yBAAKlB,UAAU,qBACX,uCACA,+IACqH,8BAErH,2DAGA,4BACI,4BAAI,uBAAGC,KAAK,sCAAR,+BACJ,4BAAI,uBAAGA,KAAK,gCAAR,+B,GAbFG,IAAMC,W,gBCuCbc,E,uKAnCD,IAAD,OACCC,EAAc,CAChBC,MAAO,QACPC,QAAS,gBAGTC,EAAMC,KAAKjB,MAAMkB,MAAMC,OACvBC,EAAaH,KAAKjB,MAAMqB,gBAAkB,WAAa,SACvDpB,EAAUgB,KAAKjB,MAAMqB,gBAAkB,UAAY,SACnDC,EAASL,KAAKjB,MAAMqB,gBACpB,kBAACE,EAAA,EAAD,CAAQtB,QAASA,EAASO,KAAK,KAAKC,QAAS,WAAO,EAAKT,MAAMU,YAAYM,IAAOQ,MAAOX,EAAaY,SAAUR,KAAKS,eAAiBN,GACtI,kBAACG,EAAA,EAAD,CAAQtB,QAASA,EAASO,KAAK,KAAKC,QAAS,WAAO,EAAKT,MAAMU,YAAYM,IAAOQ,MAAOX,GAAeO,GAE5G,OACI,kBAACO,EAAA,EAAUC,KAAX,CAAgBnC,UAAU,aAAaQ,QAAQ,SAC3C,kBAAC,IAAD,CAAMR,UAAU,kBAAkBoC,GAAE,kBAAab,IAAjD,UAEQC,KAAKjB,MAAMkB,MAAMY,MAFzB,aAEmCb,KAAKjB,MAAMkB,MAAMa,KAFpD,MAICT,K,oCAOT,IADA,IAAIU,EAAcf,KAAKjB,MAAMgC,YACpBC,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IACpC,GAAID,EAAYC,GAAGd,SAAWF,KAAKjB,MAAMkB,MAAMC,OAC3C,OAAO,EAGf,OAAO,M,GAhCStB,IAAMC,WCQfqC,MATf,WACI,OACI,yBAAK1C,UAAU,WACX,kBAAC,IAAD,CAAiBa,KAAM8B,IAAWC,MAAI,EAAC7B,KAAK,OAChD,wBAAIgB,MAAO,CAACT,QAAS,iBAArB,iBC6BOuB,E,uKA/BD,IAAD,OACDC,EAAgBtB,KAAKjB,MAAMwC,OAAOC,KAAI,SAACvB,GACvC,OAAO,kBAAC,EAAD,CACKF,IAAKE,EAAMC,OACXD,MAAOA,EACPR,YAAa,EAAKV,MAAMU,YACxBW,gBAAiB,EAAKrB,MAAMqB,gBAC5BK,YAAa,EAAK1B,MAAM0B,YACxBM,YAAa,EAAKhC,MAAMgC,iBAGpC7B,EAAMc,KAAKjB,MAAMqB,gBAAkBJ,KAAKjB,MAAM0C,MAAQ,iBACtDC,EAAa,2BAAIxC,GAErB,OACI,yBAAKV,UAAU,WACX,4BAAKwB,KAAKjB,MAAM4C,OAEZ3B,KAAKjB,MAAM6C,UACP,kBAAC,EAAD,MACIN,EAAcL,OACd,kBAACP,EAAA,EAAD,KACKY,GAELI,O,GAzBN9C,IAAMC,W,QCuBbgD,E,uKAtBP,OACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAInB,KAAL,KACI,kBAAC,IAAD,CAAMnC,UAAU,WAAWoC,GAAG,KAA9B,SAIJ,kBAACkB,EAAA,EAAInB,KAAL,KACI,kBAAC,IAAD,CAAMnC,UAAU,WAAWoC,GAAG,UAA9B,UAIJ,kBAACkB,EAAA,EAAInB,KAAL,KACI,kBAAC,IAAD,CAAMnC,UAAU,WAAWoC,GAAG,YAA9B,iB,GAfKhC,IAAMC,WCUhBkD,E,uKATP,OACI,gCACI,4EACA,kBAAC,EAAD,W,GALKnD,IAAMC,W,QCQZmD,MATf,SAAyBjD,GACrB,OACI,4BACI,wBAAIP,UAAU,QAAQ+B,MAAO,CAAC0B,MAAO,QAASlD,EAAMmD,SACpD,wBAAI1D,UAAU,SAASO,EAAMoD,SC4G1BC,E,kDAzGX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAW,GACXC,OAAQ,GACRC,WAAW,EACXZ,WAAW,GANL,E,gEAWV,IAAI1B,EAASF,KAAKjB,MAAM0D,MAAMC,OAAOxC,OACrCF,KAAK2C,YAAYzC,GACjBF,KAAK4C,WAAW1C,K,kCAGRA,GAAS,IAAD,OACZ2C,EAAG,qDAAiD3C,GACpD4C,EAAaC,UAAUF,GAE3BG,MAAMF,GACDG,MAAK,SAACC,GACqB,MAApBA,EAASC,QACT,EAAKC,SAAS,CACVb,OAAQW,EAASG,IACjBb,WAAW,S,iCAMpBtC,GAAS,IAAD,OACX2C,EAAG,qDAAiD3C,GACpD4C,EAAaC,UAAUF,GAE3B7C,KAAKoD,SAAS,CAACxB,WAAW,IAE1BoB,MAAMF,GACDG,MAAK,SAACC,GACH,OAAOA,EAASI,UAEnBL,MAAK,SAACM,GACH,EAAKH,SAAS,CACVd,UAAWiB,EACX3B,WAAW,S,oCAOvB,IADA,IAAIb,EAAcf,KAAKjB,MAAMgC,YACpBC,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IACpC,GAAID,EAAYC,GAAGd,SAAWF,KAAKqC,MAAMC,UAAUpC,OAC/C,OAAO,EAGf,OAAO,I,+BAGD,IAAD,OACDH,EAAMC,KAAKjB,MAAM0D,MAAMC,OAAOxC,OAC9BsD,EAAYxD,KAAKS,cACjB,kBAACH,EAAA,EAAD,CAAQ9B,UAAU,sBAAsBQ,QAAQ,SAASO,KAAK,KAAKC,QAAS,WAAK,EAAKT,MAAM0E,aAAa1D,KAAzG,UACA,kBAACO,EAAA,EAAD,CAAQ9B,UAAU,sBAAsBQ,QAAQ,UAAUO,KAAK,KAAKC,QAAS,WAAK,EAAKT,MAAM2E,UAAU3D,KAAvG,YACA4D,EAAW3D,KAAKqC,MAAMG,UACtB,yBAAKoB,IAAK5D,KAAKqC,MAAME,OAAQsB,IAAG,2BAAsB7D,KAAKqC,MAAMC,UAAUzB,OAASN,MAAO,CAACuD,WAAY,UACxG,KAEAC,EACA,yBAAKvF,UAAU,0BACX,wBAAIA,UAAU,sBAAsBwB,KAAKqC,MAAMC,UAAUzB,OACzD,yBAAKrC,UAAU,wBACX,kBAAC,IAAD,CAAMoC,GAAG,KACL,kBAACN,EAAA,EAAD,CAAQf,KAAK,KAAKf,UAAU,uBAA5B,SAEHgF,GAEL,kBAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAAC3E,KAAK,MACzB,+BACI,kBAAC,EAAD,CAAiB2C,QAAQ,QAAQC,MAAOnC,KAAKqC,MAAMC,UAAUxB,OAC7D,kBAAC,EAAD,CAAiBoB,QAAQ,SAASC,MAAOnC,KAAKqC,MAAMC,UAAU6B,QAC9D,kBAAC,EAAD,CAAiBjC,QAAQ,SAASC,MAAOnC,KAAKqC,MAAMC,UAAU8B,QAC9D,kBAAC,EAAD,CAAiBlC,QAAQ,WAAWC,MAAOnC,KAAKqC,MAAMC,UAAU+B,UAChE,kBAAC,EAAD,CAAiBnC,QAAQ,cAAcC,MAAOnC,KAAKqC,MAAMC,UAAUgC,YACnE,kBAAC,EAAD,CAAiBpC,QAAQ,QAAQC,MAAOnC,KAAKqC,MAAMC,UAAUiC,OAC7D,kBAAC,EAAD,CAAiBrC,QAAQ,eAAeC,MAAOnC,KAAKqC,MAAMC,UAAUkC,aACpE,kBAAC,EAAD,CAAiBtC,QAAQ,cAAcC,MAAOnC,KAAKqC,MAAMC,UAAUmC,cAG1Ed,GAIT,OACI,6BAEQ3D,KAAKqC,MAAMT,UACP,kBAAC,EAAD,MACAmC,O,GAnGEnF,IAAMC,W,QC+BjB6F,E,kLA/BP1E,KAAK2E,UAAUC,U,+BAGT,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAMrG,UAAU,mBAAmBsG,SAAU,SAACC,GAAWA,EAAMC,mBAC3D,uBAAGxG,UAAU,sBAAqB,2DAClC,kBAACqG,EAAA,EAAKI,QAAN,CACIzG,UAAU,SACV0G,KAAK,OACLC,YAAY,YACZC,KAAK,SACL7F,KAAK,KACL4C,MAAOnC,KAAKjB,MAAMoD,MAClBkD,SAAU,SAACN,GAAW,EAAKhG,MAAMuG,aAAaP,IAC9CQ,UAAW,SAACR,GAAW,EAAKhG,MAAMyG,aAAaT,IAC/CU,IAAK,SAACC,GAAW,EAAKf,UAAYe,KAEtC,kBAACpF,EAAA,EAAD,CAEI9B,UAAU,gBACVgB,QAAS,WAAO,EAAKT,MAAMyG,gBAC3BjG,KAAK,MAEL,kBAAC,IAAD,CAAiBF,KAAMsG,Y,GA1BtB/G,IAAMC,WC8VZ+G,G,8DA1KX,aAAe,IAAD,8BACV,gBACKvD,MAAQ,CACTwD,aAAc,GACd9E,YAAa,GACb+E,OAAQ,GACRC,UAAU,EACVC,aAAc,GACdvE,MAAO,GACPwE,WAAW,EACXC,kBAAkB,EAClBtE,WAAW,GAEf,EAAK8B,UAAY,EAAKA,UAAUyC,KAAf,gBACjB,EAAK1C,aAAe,EAAKA,aAAa0C,KAAlB,gBACpB,EAAKb,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKX,aAAe,EAAKA,aAAaW,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAjBR,E,0DAoBC,IAAD,OACNtD,EAAG,gEAA4D7C,KAAKqC,MAAMyD,QAC1EhD,EAAaC,UAAUF,GAE3B7C,KAAKoD,SAAS,CACVxB,WAAW,IAGfoB,MAAMF,GACDG,MAAK,SAACC,GAIH,OAHA,EAAKE,SAAS,CACVyC,aAAc,KAEX3C,EAASI,UAEnBL,MAAK,SAACM,GACmB,SAAlBA,EAAK8C,SACL9C,EAAKmB,OAAO4B,SAAQ,SAACrG,GACjB,EAAKmD,UAAS,SAACmD,GACX,MAAO,CACHV,aAAa,GAAD,mBAAMU,EAAUV,cAAhB,CAA8B5F,IAC1C2B,WAAW,SAKvB,EAAKwB,SAAS,CACV3B,MAAO8B,EAAKiD,MACZ5E,WAAW,S,mCAQlBmD,GAAQ,IAAD,EACIA,EAAMrG,OAArB0G,EADW,EACXA,KAAMjD,EADK,EACLA,MAEXnC,KAAKoD,SAAL,eACKgC,EAAOjD,M,mCAIH4C,KACJA,GAAUA,GAA2B,KAAlBA,EAAM0B,WAC1BzG,KAAK0G,cACL1G,KAAKoD,UAAS,SAACmD,GACX,MAAO,CACHR,UAAU,EACVC,aAAcO,EAAUT,c,gCAM9B/F,GACN,IAAI4G,EAEJ,GAAI3G,KAAKqC,MAAMtB,YAAYE,QAAU,EAEjCjB,KAAKoD,SAAS,CACV8C,kBAAkB,QAEnB,CACH,IAAK,IAAIlF,EAAI,EAAGA,EAAIhB,KAAKqC,MAAMwD,aAAa5E,OAAQD,IAAK,CACrD,IAAI4F,EAAe5G,KAAKqC,MAAMwD,aAAa7E,GAC3C,GAAIjB,IAAQ6G,EAAa1G,OAAQ,CAC7ByG,EAAcC,EACd,OAIR5G,KAAKoD,UAAS,SAACmD,GACX,MAAO,CACHxF,YAAY,GAAD,mBAAMwF,EAAUxF,aAAhB,CAA6B4F,QAKd,IAAlC3G,KAAKqC,MAAMtB,YAAYE,QAEvBjB,KAAKoD,SAAS,CACV6C,WAAW,M,mCAKVlG,GACT,IAAI8G,EAAY7G,KAAKqC,MAAMtB,YAAY+F,QAAO,SAACC,GAC3C,OAAIhH,IAAQgH,EAAW7G,UAM3BF,KAAKoD,SAAS,CACVrC,YAAa8F,M,iCAIV5H,GACP,IAAI+H,EAAW,YAEX/H,IACA+H,EAAW,oBAGfhH,KAAKoD,SAAL,eACK4D,GAAW,M,+BAIV,IAAD,OACDC,EAAUjH,KAAKqC,MAAM0D,SAAX,uBACM/F,KAAKqC,MAAM2D,aADjB,MAEV,wBAEJ,OACI,yBAAKxH,UAAU,iBACX,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAcY,KAAMY,KAAKqC,MAAM4D,UAAWhH,WAAW,EAAOQ,YAAaO,KAAKoG,aAC9E,kBAAC,EAAD,CAAchH,KAAMY,KAAKqC,MAAM6D,iBAAkBjH,WAAW,EAAMQ,YAAaO,KAAKoG,aACpF,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOc,KAAK,SAASC,OAAK,EAACC,UAAW,kBAClC,kBAAC,EAAD,SAEJ,kBAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACC,UAAW,kBACpC,kBAAC,EAAD,SAGJ,kBAAC,IAAD,CAAOF,KAAK,kBAAkBG,OAAQ,SAACtI,GAAD,OAClC,kBAAC,EAAD,eAAa2E,UAAW,EAAKA,UAAWD,aAAc,EAAKA,aAAc1C,YAAa,EAAKsB,MAAMtB,aAAiBhC,OAGtH,kBAAC,IAAD,CAAOmI,KAAK,IAAIE,UAAW,kBACvB,yBAAK5I,UAAU,kBACX,kBAAC,EAAD,CAAQ8G,aAAc,EAAKA,aAAcE,aAAc,EAAKA,aAAcrD,MAAO,EAAKE,MAAMyD,SAC5F,kBAAC,EAAD,CAASnE,MAAOsF,EAAS1F,OAAQ,EAAKc,MAAMwD,aAAcpG,YAAa,EAAKiE,UAAWtD,iBAAiB,EAAMW,YAAa,EAAKsB,MAAMtB,YAAaU,MAAO,EAAKY,MAAMZ,MAAOG,UAAW,EAAKS,MAAMT,YAClM,kBAAC,EAAD,CAASD,MAAM,uBAAuBJ,OAAQ,EAAKc,MAAMtB,YAAatB,YAAa,EAAKgE,aAAcrD,iBAAiB,EAAOW,YAAa,EAAKsB,MAAMtB,YAAaU,MAAO,EAAKY,MAAMZ,MAAOG,WAAW,e,GAjKrNhD,IAAMC,YCpLxByI,IAASD,OACL,kBAAC,EAAD,MACAE,SAASC,eAAe,W","file":"static/js/main.3c5188be.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about-container\">\r\n                <h2>About</h2>\r\n                <p>\r\n                    This website aims to simplify the movie nomination process for the Shoppies, \r\n                    celebrated awards that recognize achievements in film by entrepreneurs. \r\n                    This website uses the <a href=\"http://www.omdbapi.com/\" target=\"_blank\" rel=\"noopener noreferrer\">OMDb API</a> to allow you to save your favourite films that you feel deserve a nomination. \r\n                    You can select up to five nominees.\r\n                </p>\r\n                <p>\r\n                    The Shoppies are brought to you by <a href=\"https://www.shopify.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Shopify</a>, the leading cloud-based, \r\n                    multi-channel commerce platform that powers more than 1,000,000 businesses in approximately 175 countries worldwide. \r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction AlertDisplay(props) {\r\n    let variant = props.isWarning ? \"warning\" : \"success\";\r\n    let msg = props.isWarning ?\r\n        \"You can't have more than 5 nominations!\" :\r\n        \"Awesome! You've added your 5 nominations!\";\r\n    let className = props.isWarning ? \"close-icon-warning\" : \"close-icon\";\r\n\r\n    return (\r\n        <Alert show={props.show} variant={variant} >\r\n            <p className=\"alert-text\">{msg}</p>\r\n            <FontAwesomeIcon icon={faWindowClose} size=\"2x\" onClick={() => props.handleClick(props.isWarning)} className={className}/>\r\n        </Alert>\r\n    );\r\n}\r\n\r\nexport default AlertDisplay;","import React from 'react';\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact-container\">\r\n                <h2>Contact</h2>\r\n                <p>\r\n                    This website was developed by Ronald Hua as part of his application for an internship at Shopify for Winter 2021.<br/>\r\n                </p>\r\n                <p>\r\n                    You can connect with Ron at: \r\n                </p>\r\n                <ul>\r\n                    <li><a href=\"https://linkedin.com/in/ronald-hua\">linkedin.com/in/ronald-hua</a></li>\r\n                    <li><a href=\"https://github.com/RonaldH-7\">github.com/RonaldH-7</a></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nclass MovieItem extends React.Component {\r\n    render() {\r\n        const buttonStyle = {\r\n            float: \"right\",\r\n            display: \"inline-block\"\r\n        }\r\n\r\n        let key = this.props.movie.imdbID;\r\n        let buttonText = this.props.displayNominate ? \"Nominate\" : \"Remove\";\r\n        let variant = this.props.displayNominate ? \"success\" : \"danger\";\r\n        let button = this.props.displayNominate ? \r\n            <Button variant={variant} size=\"sm\" onClick={() => {this.props.handleClick(key)}} style={buttonStyle} disabled={this.isNominated()} >{buttonText}</Button> : \r\n            <Button variant={variant} size=\"sm\" onClick={() => {this.props.handleClick(key)}} style={buttonStyle} >{buttonText}</Button>\r\n        \r\n        return (\r\n            <ListGroup.Item className=\"movie-item\" variant=\"flush\">\r\n                <Link className=\"movie-item-link\" to={`/detail/${key}`}>\r\n                    {/* {this.props.movie.Title} */}\r\n                    {`${this.props.movie.Title} (${this.props.movie.Year})`}\r\n                </Link>\r\n                {button}\r\n            </ListGroup.Item>\r\n        );\r\n    }\r\n\r\n    isNominated() {\r\n        let nominations = this.props.nominations;\r\n        for (let i = 0; i < nominations.length; i++) {\r\n            if (nominations[i].imdbID === this.props.movie.imdbID) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default MovieItem;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"loading\">\r\n            <FontAwesomeIcon icon={faSpinner} spin size=\"2x\" />\r\n        <h1 style={{display: \"inline-block\"}}>&nbsp;Loading</h1>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport MovieItem from './MovieItem';\r\nimport Loading from './Loading';\r\n\r\nclass Display extends React.Component {\r\n    render() {\r\n        let displayMovies = this.props.movies.map((movie) => {\r\n            return <MovieItem \r\n                        key={movie.imdbID} \r\n                        movie={movie} \r\n                        handleClick={this.props.handleClick} \r\n                        displayNominate={this.props.displayNominate}\r\n                        isNominated={this.props.isNominated}\r\n                        nominations={this.props.nominations}\r\n                    />\r\n        });\r\n        let msg = this.props.displayNominate ? this.props.error : \"No nominations\";\r\n        let displayMsg = <p>{msg}</p>;\r\n\r\n        return (\r\n            <div className=\"display\">\r\n                <h5>{this.props.title}</h5>\r\n                {\r\n                    this.props.isLoading ?\r\n                        <Loading /> :\r\n                            displayMovies.length ?\r\n                            <ListGroup>\r\n                                {displayMovies}\r\n                            </ListGroup> :\r\n                            displayMsg\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n            <Nav>\r\n                <Nav.Item>\r\n                    <Link className=\"nav-link\" to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Link className=\"nav-link\" to=\"/about\">\r\n                        About\r\n                    </Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Link className=\"nav-link\" to=\"/contact\">\r\n                        Contact\r\n                    </Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>The Shoppies: Movie awards for entrepreneurs</h1>\r\n                <Navigation />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction MovieDetailItem(props) {\r\n    return (\r\n        <tr>\r\n            <td className=\"test1\" style={{width: \"20%\"}}>{props.heading}</td>\r\n            <td className=\"test1\">{props.value}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default MovieDetailItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport MovieDetailItem from './MovieDetailItem';\r\nimport Loading from './Loading';\r\n\r\nclass MovieDetail extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movieInfo: {},\r\n            poster: {},\r\n            hasPoster: false,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let imdbID = this.props.match.params.imdbID;\r\n        this.fetchPoster(imdbID);\r\n        this.fetchMovie(imdbID);\r\n    }\r\n\r\n    fetchPoster(imdbID) {\r\n        let uri = `https://img.omdbapi.com/?apikey=b49c2121&i=${imdbID}`;\r\n        let encodedURI = encodeURI(uri)\r\n\r\n        fetch(encodedURI)\r\n            .then((response) => {\r\n                if (response.status !== 404) {\r\n                    this.setState({\r\n                        poster: response.url,\r\n                        hasPoster: true\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    fetchMovie(imdbID) {\r\n        let uri = `https://www.omdbapi.com/?apikey=b49c2121&i=${imdbID}`;\r\n        let encodedURI = encodeURI(uri)\r\n        \r\n        this.setState({isLoading: true});\r\n\r\n        fetch(encodedURI)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    movieInfo: data,\r\n                    isLoading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    isNominated() {\r\n        let nominations = this.props.nominations;\r\n        for (let i = 0; i < nominations.length; i++) {\r\n            if (nominations[i].imdbID === this.state.movieInfo.imdbID) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let key = this.props.match.params.imdbID;\r\n        let buttonJSX = this.isNominated() ?\r\n            <Button className=\"movie-detail-button\" variant=\"danger\" size=\"sm\" onClick={()=>{this.props.handleRemove(key)}}>Remove</Button> :\r\n            <Button className=\"movie-detail-button\" variant=\"success\" size=\"sm\" onClick={()=>{this.props.handleAdd(key)}}>Nominate</Button>;\r\n        let imageJSX = this.state.hasPoster ? \r\n            <img src={this.state.poster} alt={`Movie poster for ${this.state.movieInfo.Title}`} style={{marginLeft: \"20px\"}} /> :\r\n            null;\r\n\r\n        let movieDetailJSX = (\r\n            <div className=\"movie-detail-container\">\r\n                <h2 className=\"movie-detail-title\">{this.state.movieInfo.Title}</h2>\r\n                <div className=\"movie-detail-buttons\">\r\n                    <Link to=\"/\">\r\n                        <Button size=\"sm\" className=\"movie-detail-button\">Home</Button>\r\n                    </Link>\r\n                    {buttonJSX}\r\n                </div>\r\n                <Table striped bordered size=\"sm\">\r\n                    <tbody>\r\n                        <MovieDetailItem heading=\"Year:\" value={this.state.movieInfo.Year} />\r\n                        <MovieDetailItem heading=\"Genre:\" value={this.state.movieInfo.Genre} />\r\n                        <MovieDetailItem heading=\"Rated:\" value={this.state.movieInfo.Rated} />\r\n                        <MovieDetailItem heading=\"Runtime:\" value={this.state.movieInfo.Runtime} />\r\n                        <MovieDetailItem heading=\"Box office:\" value={this.state.movieInfo.BoxOffice} />\r\n                        <MovieDetailItem heading=\"Plot:\" value={this.state.movieInfo.Plot} />\r\n                        <MovieDetailItem heading=\"IMDB Rating:\" value={this.state.movieInfo.imdbRating} />\r\n                        <MovieDetailItem heading=\"IMDB Votes:\" value={this.state.movieInfo.imdbVotes} />\r\n                    </tbody>\r\n                </Table>\r\n                {imageJSX}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.isLoading ?\r\n                        <Loading /> :\r\n                        movieDetailJSX\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDetail;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Search extends React.Component {\r\n    componentDidMount(){\r\n        this.nameInput.focus(); \r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"search-component\" onSubmit={(event) => {event.preventDefault()}}>\r\n                <p className=\"search-description\"><strong>Search by movie title:</strong></p>\r\n                <Form.Control\r\n                    className=\"search\" \r\n                    type=\"text\" \r\n                    placeholder=\"Search...\" \r\n                    name=\"search\"\r\n                    size=\"sm\"\r\n                    value={this.props.value} \r\n                    onChange={(event) => {this.props.handleChange(event)}}\r\n                    onKeyDown={(event) => {this.props.handleSearch(event)}}\r\n                    ref={(input) => {this.nameInput = input;}}\r\n                />\r\n                <Button \r\n                    // variant=\"primary\" \r\n                    className=\"search-button\"\r\n                    onClick={() => {this.props.handleSearch()}}\r\n                    size=\"sm\"\r\n                >\r\n                    <FontAwesomeIcon icon={faSearch}></FontAwesomeIcon>\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","// import React from 'react';\r\n// import { BrowserRouter, Route} from 'react-router-dom';\r\n\r\n// import { About, AlertDisplay, Contact, Display, Header, MovieDetail, Search} from './components/Components';\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import './index.css';\r\n\r\n// class App extends React.Component {\r\n//     constructor() {\r\n//         super();\r\n//         this.state = {\r\n//             movieResults: [],\r\n//             nominations: [],\r\n//             search: \"\",\r\n//             searched: false,\r\n//             searchedTerm: \"\",\r\n//             error: \"\",\r\n//             showAlert: false,\r\n//             showAlertWarning: false\r\n//         };\r\n//         this.handleAdd = this.handleAdd.bind(this);\r\n//         this.handleRemove = this.handleRemove.bind(this);\r\n//         this.handleChange = this.handleChange.bind(this);\r\n//         this.handleSearch = this.handleSearch.bind(this);\r\n//         this.closeAlert = this.closeAlert.bind(this);\r\n//     }\r\n\r\n//     fetchMovies() {\r\n//         let uri = `https://www.omdbapi.com/?apikey=b49c2121&type=movie&s=${this.state.search}`;\r\n//         let encodedURI = encodeURI(uri)\r\n\r\n//         fetch(encodedURI)\r\n//             .then((response) => {\r\n//                 this.setState({\r\n//                     movieResults: []\r\n//                 });\r\n//                 return response.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 if (data.Response === \"True\") {\r\n//                     data.Search.forEach((movie) => {\r\n//                         this.setState((prevState) => {\r\n//                             return {\r\n//                                 movieResults: [...prevState.movieResults, movie]\r\n//                             }\r\n//                         });\r\n//                     });\r\n//                 } else {\r\n//                     this.setState({\r\n//                         error: data.Error\r\n//                     });\r\n//                 }\r\n//             });      \r\n//     }\r\n\r\n//     // ***************** Event Handlers *****************\r\n\r\n//     handleChange(event) {\r\n//         let {name, value} = event.target;\r\n\r\n//         this.setState({\r\n//             [name]: value\r\n//         });\r\n//     }\r\n\r\n//     handleSearch(event) {\r\n//         if (!event || (event && event.keyCode === 13)) {\r\n//             this.fetchMovies();\r\n//             this.setState((prevState) => {\r\n//                 return {\r\n//                     searched: true,\r\n//                     searchedTerm: prevState.search\r\n//                 }\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     handleAdd(key) {\r\n//         let targetMovie;\r\n\r\n//         if (this.state.nominations.length >= 5) {\r\n//             // alert(\"I am sorry, but you have too many nominations already... Dingus.\");\r\n//             this.setState({\r\n//                 showAlertWarning: true\r\n//             });\r\n//         } else {\r\n//             for (let i = 0; i < this.state.movieResults.length; i++) {\r\n//                 let currentMovie = this.state.movieResults[i];\r\n//                 if (key === currentMovie.imdbID) {\r\n//                     targetMovie = currentMovie;\r\n//                     break;\r\n//                 }\r\n//             }\r\n\r\n//             this.setState((prevState) => {\r\n//                 return {\r\n//                     nominations: [...prevState.nominations, targetMovie]\r\n//                 }\r\n//             });\r\n//         }\r\n\r\n//         if (this.state.nominations.length === 4) {\r\n//             // alert(\"Awesome! You've added your 5 nominations\");\r\n//             this.setState({\r\n//                 showAlert: true\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     handleRemove(key) {\r\n//         let copyState = this.state.nominations.filter((nomination) => {\r\n//             if (key !== nomination.imdbID) {\r\n//                 return true;\r\n//             }\r\n//             return false;\r\n//         });\r\n\r\n//         this.setState({\r\n//             nominations: copyState\r\n//         });\r\n//     }\r\n\r\n//     closeAlert(isWarning) {\r\n//         let property = \"showAlert\";\r\n\r\n//         if (isWarning) {\r\n//             property = \"showAlertWarning\";\r\n//         }\r\n        \r\n//         this.setState({\r\n//             [property]: false\r\n//         });\r\n//     }\r\n\r\n//     render() {\r\n//         let results = this.state.searched ? \r\n//             `Results for \"${this.state.searchedTerm}\":` :\r\n//             \"Search for something!\"\r\n\r\n//         return (\r\n//             <div className=\"app-container\">\r\n//                 <BrowserRouter>\r\n//                     <AlertDisplay show={this.state.showAlert} isWarning={false} handleClick={this.closeAlert} />\r\n//                     <AlertDisplay show={this.state.showAlertWarning} isWarning={true} handleClick={this.closeAlert} />\r\n\r\n//                     <Header />\r\n//                     <Route path=\"/about\" exact component={() => (\r\n//                         <About />\r\n//                     )} />\r\n//                     <Route path=\"/contact\" exact component={() => (\r\n//                         <Contact />\r\n//                     )} />\r\n\r\n//                     <div className=\"grid-container\">\r\n//                         <Route path=\"/\" component={() => (\r\n//                             <Search handleChange={this.handleChange} handleSearch={this.handleSearch} value={this.state.search}/>\r\n//                         )} />\r\n//                         <Route path=\"/\" exact component={() => (\r\n//                             <Display title={results} movies={this.state.movieResults} handleClick={this.handleAdd} displayNominate={true} nominations={this.state.nominations} error={this.state.error} />\r\n//                         )} />\r\n//                         <Route path=\"/\" exact component={() => (\r\n//                             <Display title=\"Current Nominations:\" movies={this.state.nominations} handleClick={this.handleRemove} displayNominate={false} nominations={this.state.nominations} error={this.state.error} />\r\n//                         )} />\r\n//                     </div>\r\n\r\n//                     <Route path=\"/detail/:imdbID\" render={(props) => (\r\n//                         <MovieDetail handleAdd={this.handleAdd} handleRemove={this.handleRemove} nominations={this.state.nominations} {...props} />\r\n//                     )}/>\r\n//                 </BrowserRouter>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport { About, AlertDisplay, Contact, Display, Header, MovieDetail, Search} from './components/Components';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movieResults: [],\r\n            nominations: [],\r\n            search: \"\",\r\n            searched: false,\r\n            searchedTerm: \"\",\r\n            error: \"\",\r\n            showAlert: false,\r\n            showAlertWarning: false,\r\n            isLoading: false\r\n        };\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.closeAlert = this.closeAlert.bind(this);\r\n    }\r\n\r\n    fetchMovies() {\r\n        let uri = `https://www.omdbapi.com/?apikey=b49c2121&type=movie&s=${this.state.search}`;\r\n        let encodedURI = encodeURI(uri)\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        fetch(encodedURI)\r\n            .then((response) => {\r\n                this.setState({\r\n                    movieResults: []\r\n                });\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                if (data.Response === \"True\") {\r\n                    data.Search.forEach((movie) => {\r\n                        this.setState((prevState) => {\r\n                            return {\r\n                                movieResults: [...prevState.movieResults, movie],\r\n                                isLoading: false\r\n                            }\r\n                        });\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        error: data.Error,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });      \r\n    }\r\n\r\n    // ***************** Event Handlers *****************\r\n\r\n    handleChange(event) {\r\n        let {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        if (!event || (event && event.keyCode === 13)) {\r\n            this.fetchMovies();\r\n            this.setState((prevState) => {\r\n                return {\r\n                    searched: true,\r\n                    searchedTerm: prevState.search\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAdd(key) {\r\n        let targetMovie;\r\n\r\n        if (this.state.nominations.length >= 5) {\r\n            // alert(\"I am sorry, but you have too many nominations already... Dingus.\");\r\n            this.setState({\r\n                showAlertWarning: true\r\n            });\r\n        } else {\r\n            for (let i = 0; i < this.state.movieResults.length; i++) {\r\n                let currentMovie = this.state.movieResults[i];\r\n                if (key === currentMovie.imdbID) {\r\n                    targetMovie = currentMovie;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.setState((prevState) => {\r\n                return {\r\n                    nominations: [...prevState.nominations, targetMovie]\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.state.nominations.length === 4) {\r\n            // alert(\"Awesome! You've added your 5 nominations\");\r\n            this.setState({\r\n                showAlert: true\r\n            });\r\n        }\r\n    }\r\n\r\n    handleRemove(key) {\r\n        let copyState = this.state.nominations.filter((nomination) => {\r\n            if (key !== nomination.imdbID) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        this.setState({\r\n            nominations: copyState\r\n        });\r\n    }\r\n\r\n    closeAlert(isWarning) {\r\n        let property = \"showAlert\";\r\n\r\n        if (isWarning) {\r\n            property = \"showAlertWarning\";\r\n        }\r\n        \r\n        this.setState({\r\n            [property]: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let results = this.state.searched ? \r\n            `Results for \"${this.state.searchedTerm}\":` :\r\n            \"Search for something!\"\r\n\r\n        return (\r\n            <div className=\"app-container\">\r\n                <BrowserRouter>\r\n                    <AlertDisplay show={this.state.showAlert} isWarning={false} handleClick={this.closeAlert} />\r\n                    <AlertDisplay show={this.state.showAlertWarning} isWarning={true} handleClick={this.closeAlert} />\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/about\" exact component={() => (\r\n                            <About />\r\n                        )} />\r\n                        <Route path=\"/contact\" exact component={() => (\r\n                            <Contact />\r\n                        )} />\r\n\r\n                        <Route path=\"/detail/:imdbID\" render={(props) => (\r\n                            <MovieDetail handleAdd={this.handleAdd} handleRemove={this.handleRemove} nominations={this.state.nominations} {...props} />\r\n                        )}/>\r\n\r\n                        <Route path=\"/\" component={() => (\r\n                            <div className=\"grid-container\">\r\n                                <Search handleChange={this.handleChange} handleSearch={this.handleSearch} value={this.state.search}/>\r\n                                <Display title={results} movies={this.state.movieResults} handleClick={this.handleAdd} displayNominate={true} nominations={this.state.nominations} error={this.state.error} isLoading={this.state.isLoading} />\r\n                                <Display title=\"Current Nominations:\" movies={this.state.nominations} handleClick={this.handleRemove} displayNominate={false} nominations={this.state.nominations} error={this.state.error} isLoading={false} />\r\n                            </div>\r\n                        )} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}